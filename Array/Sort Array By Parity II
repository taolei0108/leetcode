Given an array A of non-negative integers, half of the integers in A are odd, and half of the integers are even.

Sort the array so that whenever A[i] is odd, i is odd; and whenever A[i] is even, i is even.

You may return any answer array that satisfies this condition.

 

Example 1:

Input: [4,2,5,7]
Output: [4,5,2,7]
Explanation: [4,7,2,5], [2,5,4,7], [2,7,4,5] would also have been accepted.
 

Note:

2 <= A.length <= 20000
A.length % 2 == 0
0 <= A[i] <= 1000

-----------------------------------------------------------------------------------------------------------------------------------------
方法一（将奇偶刷选出来放到新建的数组里）：
class Solution {
    public int[] sortArrayByParityII(int[] A) {
        int len = A.length;
        int[] odd = new int[len/2];
        int[] even = new int[len/2];
        int i = 0;
        int j = 1;
        int[] tmp = new int[len];
        for(int m : A){
            if(m%2 == 0){
                tmp[i] = m;
                i += 2;
            }else{
                tmp[j] = m;
                j += 2;
            }
        }
        
        
        return tmp;
    }
}

方法二（前后下标对调）：
class Solution {
    public int[] sortArrayByParityII(int[] A) {
        int i = 0;
        int j = 1;
        int len = A.length;
        int tmp;
        while(i < len-1){
            if(A[i]%2 == 1){
                while(A[j]%2 == 1){
                    j += 2;
                }
                tmp = A[i];
                A[i] = A[j];
                A[j] = tmp;
            }
            i += 2;
        }
        return A;
    }
}
