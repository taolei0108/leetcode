请定义一个队列并实现函数 max_value 得到队列里的最大值，要求函数max_value、push_back 和 pop_front 的时间复杂度都是O(1)。

若队列为空，pop_front 和 max_value 需要返回 -1

示例 1：

输入: 
["MaxQueue","push_back","push_back","max_value","pop_front","max_value"]
[[],[1],[2],[],[],[]]
输出: [null,null,null,2,1,2]
示例 2：

输入: 
["MaxQueue","pop_front","max_value"]
[[],[],[]]
输出: [null,-1,-1]
 

限制：

1 <= push_back,pop_front,max_value的总操作数 <= 10000
1 <= value <= 10^5


方法一：用双端队列（类似的也可以使用链表）
from Queue import Queue
from Queue import deque

class MaxQueue(object):

    def __init__(self):
        self.q = Queue()
        self.d = deque()

    def max_value(self):
        """
        :rtype: int
        """
        if self.d:
            return self.d[0]
        else:
            return -1


    def push_back(self, value):
        """
        :type value: int
        :rtype: None
        """
        self.q.put(value)
        while self.d and self.d[-1] < value:
            self.d.pop()

        self.d.append(value)
             


    def pop_front(self):
        """
        :rtype: int
        """
        if self.q.empty():
            return -1
        
        result = self.q.get()
        if result == self.d[0]:
            self.d.popleft()
        return result
        
            
