字符串压缩。利用字符重复出现的次数，编写一种方法，实现基本的字符串压缩功能。比如，字符串aabcccccaaa会变为a2b1c5a3。若“压缩”后的字符串没有变短，则返回原先的字符串。你可以假设字符串中只包含大小写英文字母（a至z）。

示例1:

 输入："aabcccccaaa"
 输出："a2b1c5a3"
示例2:

 输入："abbccd"
 输出："abbccd"
 解释："abbccd"压缩后为"a1b2c2d1"，比原字符串长度更长。
提示：

字符串长度在[0, 50000]范围内。

方法一，遍历：
小技巧：不要用字符串拼接，这样效率很低，用数组存储然后组合成字符串
class Solution(object):
    def compressString(self, S):
        """
        :type S: str
        :rtype: str
        """
        temp = [S[:1]]
        count = 1
        for i in range(1,len(S)):
            if S[i] != S[i-1]:
                temp.append(str(count))
                temp.append(S[i])
                count = 0

            count += 1
        
        temp.append(str(count))
        if len(temp) < len(S):
            return "".join(temp)
        
        return S
            
