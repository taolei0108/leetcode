对于字符串 S 和 T，只有在 S = T + ... + T（T 与自身连接 1 次或多次）时，我们才认定 “T 能除尽 S”。

返回最长字符串 X，要求满足 X 能除尽 str1 且 X 能除尽 str2。

 

示例 1：

输入：str1 = "ABCABC", str2 = "ABC"
输出："ABC"
示例 2：

输入：str1 = "ABABAB", str2 = "ABAB"
输出："AB"
示例 3：

输入：str1 = "LEET", str2 = "CODE"
输出：""
 

提示：

1 <= str1.length <= 1000
1 <= str2.length <= 1000
str1[i] 和 str2[i] 为大写英文字母

方法一：找出两个字符串的长度最大公约数后，不断将子字符串累加和原始字符串比较（就是下面注释的）
方法二：两个字符串str1+str2和str2+str1如果相等，直接返回两个字符串的长度最大公约数的子字符串（证明可以看题解）
class Solution(object):
    def gcdOfStrings(self, str1, str2):
        """
        :type str1: str
        :type str2: str
        :rtype: str
        """
        if str1 == str2:
            return str1
        
        longs = max(len(str1),len(str2))
        shorts = min(len(str1),len(str2))
        
        temp = longs - shorts
        while temp != 0:
            temp = longs - shorts
            longs = max(temp, shorts)
            shorts = min(temp, shorts)
        
        prefix = str1[:longs]
        if str1 + str2 == str2 + str1:
            return prefix
        # if (len(str1) / longs * prefix == str1) and (len(str2) / longs * prefix == str2):
        #     return prefix
        
        return ""
