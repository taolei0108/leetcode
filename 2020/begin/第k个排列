给出集合 [1,2,3,…,n]，其所有元素共有 n! 种排列。

按大小顺序列出所有排列情况，并一一标记，当 n = 3 时, 所有排列如下：

"123"
"132"
"213"
"231"
"312"
"321"
给定 n 和 k，返回第 k 个排列。

说明：

给定 n 的范围是 [1, 9]。
给定 k 的范围是[1,  n!]。
示例 1:

输入: n = 3, k = 3
输出: "213"
示例 2:

输入: n = 4, k = 9
输出: "2314"

方法一：
遍历递减，从高位遍历，每一位根据k的位置确定，时间复杂度 O(n)
class Solution(object):
    def getPermutation(self, n, k):
        """
        :type n: int
        :type k: int
        :rtype: str
        """
        if n == 1:
            return str(1)
        
        c = 1
        for i in range(1,n+1):
            c *= i
        
        clist = list(range(1,n+1))
        rlist = []
        for i in reversed(range(1,n+1)):
            c = c / i
            if i == 0:
                rlist.append(str(clist.pop(0)))
                continue
            multiple = (k-1)/c
            rlist.append(str(clist.pop(multiple)))
            k -= multiple*c
        
        return "".join(rlist)
