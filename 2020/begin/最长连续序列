给定一个未排序的整数数组，找出最长连续序列的长度。

要求算法的时间复杂度为 O(n)。

示例:

输入: [100, 4, 200, 1, 3, 2]
输出: 4
解释: 最长连续序列是 [1, 2, 3, 4]。它的长度为 4。


方法一：
使用set数据结构，查询的时间复杂度为O(1)，下面貌似有两层循环，但是只有k-1不在set里的元素才会执行，时间复杂度为O(n+n+n)=O(n)
class Solution(object):
    def longestConsecutive(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        numset = set(nums)
        
        maxlength = 0
        for k in numset:
            if k - 1 not in numset:
                count = 1
                current_num = k
                
                while current_num + 1 in numset:
                    current_num += 1
                    count += 1
                
                maxlength = max(count, maxlength)
        
        return maxlength
