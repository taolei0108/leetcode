编写一个函数来查找字符串数组中的最长公共前缀。

如果不存在公共前缀，返回空字符串 ""。

示例 1:

输入: ["flower","flow","flight"]
输出: "fl"
示例 2:

输入: ["dog","racecar","car"]
输出: ""
解释: 输入不存在公共前缀。
说明:

所有输入只包含小写字母 a-z 。



来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/longest-common-prefix

水平查找法：
class Solution(object):
    def longestCommonPrefix(self, strs):
        """
        :type strs: List[str]
        :rtype: str
        """
        
        if len(strs) == 0:
            return ""
        
        first = strs[0]
        if len(strs) == 1:
            return first
        
        prefix = ""
        for i in range(1,len(first)+1):
            for str in strs[1:]:
                if not str.startswith(first[:i]):
                    return prefix
            prefix = first[:i]
        return prefix


二分法查找：
class Solution(object):
    def longestCommonPrefix(self, strs):
        """
        :type strs: List[str]
        :rtype: str
        """
        
        if len(strs) == 0:
            return ""
        
        if len(strs) == 1:
            return strs[0]
        
        start = 1
        end = sys.maxsize
        for str in strs:
            if len(str) < end:
                end = len(str)
        
        
        while start <= end:
            half = (start + end) / 2
            if self.compare(strs, half):
                start = half + 1
            else:
                end = half - 1
        
        return strs[0][:end]

    
    def compare(self, strs, length):
        prefix = strs[0][:length]
        for str in strs[1:]:
            if not str.startswith(prefix):
                return False
        
        return True
        
Trie（前缀树）：
